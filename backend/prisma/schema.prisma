generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  accCode        String   @id @map("acc_code")
  accName        String   @map("acc_name")
  accParentCode  String?  @map("acc_parent_code")
  accSublevelFormat Int    @default(0) @map("acc_sublevel_format")
  accType        String   @map("acc_type")
  accCategory    String?  @map("acc_category")
  accIsBank      Boolean  @default(false) @map("acc_is_bank")
  accIsActive    Boolean  @default(true) @map("acc_is_active")
  accNotes       String?  @map("acc_notes")
  accCreatedBy   String?  @map("acc_created_by")
  accCreatedAt   DateTime @default(now()) @map("acc_created_at")
  accUpdatedBy   String?  @map("acc_updated_by")
  accUpdatedAt   DateTime? @map("acc_updated_at")
  accountBanks   AccountBank[]
  journalDetails JournalDetail[] @relation("AccountJournalDetails")
  configValues   ConfigValue[]   @relation("AccountConfigValues")
  @@map("t_account")
}

model AccountBank {
  abkAccCode     String   @id @map("abk_acc_code")
  abkBankName    String?  @map("abk_bank_name")
  abkBranchName  String?  @map("abk_branch_name")
  abkAccountNo   String?  @map("abk_account_no")
  abkSheba       String?  @map("abk_sheba")
  abkCurrency    String   @default("IRR") @map("abk_currency")
  abkIsActive    Boolean  @default(true) @map("abk_is_active")
  abkIsPos       Boolean  @default(true) @map("abk_is_pos")
  abkIsCheck     Boolean  @default(true) @map("abk_is_check")
  abkCreatedBy   String?  @map("abk_created_by")
  abkCreatedAt   DateTime @default(now()) @map("abk_created_at")
  abkUpdatedBy   String?  @map("abk_updated_by")
  abkUpdatedAt   DateTime? @map("abk_updated_at")
  account        Account  @relation(fields: [abkAccCode], references: [accCode])
  @@map("t_account_bank")
}

model Person {
  perCode        String   @id @map("per_code")
  perName        String   @map("per_name")
  perLastName    String   @map("per_last_name")
  perNationalId  String?  @map("per_national_id")
  perMobile      String?  @map("per_mobile")
  perEmail       String?  @map("per_email")
  perTypeSet     String?  @map("per_type_set")
  perAccCode     String?  @map("per_acc_code")
  perIsActive    Boolean  @default(true) @map("per_is_active")
  perNotes       String?  @map("per_notes")
  perCreatedBy   String?  @map("per_created_by")
  perCreatedAt   DateTime @default(now()) @map("per_created_at")
  perUpdatedBy   String?  @map("per_updated_by")
  perUpdatedAt   DateTime? @map("per_updated_at")
  userAccounts  UserAccount[]
  personAccounts PersonAccount[]
  wallet         Wallet?
  walletTxns     WalletTransaction[]
  reservations   Reservation[]
  shareholdings  Shareholding[]
  shareProfits   ShareProfit[]
  shareTransfersFrom ShareTransfer[] @relation("FromPerson")
  shareTransfersTo   ShareTransfer[] @relation("ToPerson")
  userLogs       UserLog[]
  @@map("t_person")
}

model UserAccount {
  usrPerCode    String   @id @map("usr_per_code")
  usrUsername   String   @unique @map("usr_username")
  usrPassword   String   @map("usr_password")
  usrRole       String   @default("viewer") @map("usr_role")
  usrIsActive   Boolean  @default(true) @map("usr_is_active")
  usrLastLogin  DateTime? @map("usr_last_login")
  usrAvatar     String?  @map("usr_avatar")
  usrCreatedBy  String?  @map("usr_created_by")
  usrCreatedAt  DateTime @default(now()) @map("usr_created_at")
  usrUpdatedBy  String?  @map("usr_updated_by")
  usrUpdatedAt  DateTime? @map("usr_updated_at")
  person        Person?   @relation(fields: [usrPerCode], references: [perCode])
  @@map("t_user_account")
}

model PersonAccount {
  pacPersonCode String   @map("pac_person_code")
  pacType       String   @map("pac_type")
  pacPrjCode    String   @map("pac_prj_code")
  pacAccCode    String   @map("pac_acc_code")
  pacCreatedAt  DateTime @default(now()) @map("pac_created_at")
  person        Person   @relation(fields: [pacPersonCode], references: [perCode])
  project       Project  @relation("ProjectPersonAccounts", fields: [pacPrjCode], references: [prjCode])
  @@id([pacPersonCode, pacType, pacPrjCode])
  @@map("t_person_account")
}

model Wallet {
  wltPerCode    String   @id @map("wlt_per_code")
  wltBalance    Float    @default(0) @map("wlt_balance")
  wltLastUpdate DateTime @default(now()) @map("wlt_last_update")
  wltCreatedBy  String?  @map("wlt_created_by")
  wltCreatedAt  DateTime @default(now()) @map("wlt_created_at")
  wltUpdatedBy  String?  @map("wlt_updated_by")
  wltUpdatedAt  DateTime? @map("wlt_updated_at")
  person        Person   @relation(fields: [wltPerCode], references: [perCode])
  @@map("t_wallet")
}

model WalletTransaction {
  wtxId         Int      @id @default(autoincrement()) @map("wtx_id")
  wtxPerCode    String   @map("wtx_per_code")
  wtxType       String   @map("wtx_type")
  wtxAmount     Float    @map("wtx_amount")
  wtxDatetime   DateTime @default(now()) @map("wtx_datetime")
  wtxDesc       String?  @map("wtx_desc")
  wtxRefType    String?  @map("wtx_ref_type")
  wtxRefCode    String?  @map("wtx_ref_code")
  wtxJrnCode    String?  @map("wtx_jrn_code")
  wtxCreatedBy  String?  @map("wtx_created_by")
  person        Person   @relation(fields: [wtxPerCode], references: [perCode])
  @@map("t_wallet_transaction")
}

model Project {
  prjCode       String   @id @map("prj_code")
  prjTitle      String   @map("prj_title")
  prjLocation   String?  @map("prj_location")
  prjType       String   @default("custom") @map("prj_type")
  prjModel      String   @map("prj_model")
  prjStartDate  DateTime? @map("prj_start_date")
  prjEndDate    DateTime? @map("prj_end_date")
  prjNav        Float?   @map("prj_nav")
  prjIsActive   Boolean  @default(true) @map("prj_is_active")
  prjCreatedBy  String?  @map("prj_created_by")
  prjCreatedAt  DateTime @default(now()) @map("prj_created_at")
  prjUpdatedBy  String?  @map("prj_updated_by")
  prjUpdatedAt  DateTime? @map("prj_updated_at")
  units         Unit[]
  shareholdings Shareholding[]
  shareProfits  ShareProfit[]
  shareTransfers ShareTransfer[]
  reservations  Reservation[]
  personAccounts PersonAccount[] @relation("ProjectPersonAccounts")
  @@map("t_project")
}

model Unit {
  untPrjCode    String   @map("unt_prj_code")
  untCode       String   @map("unt_code")
  untTitle      String?  @map("unt_title")
  untType       String   @default("room") @map("unt_type")
  untArea       Float?   @map("unt_area")
  untCapacity   Int?     @map("unt_capacity")
  untFloor      String?  @map("unt_floor")
  untBlock      String?  @map("unt_block")
  untIsActive   Boolean  @default(true) @map("unt_is_active")
  untNotes      String?  @map("unt_notes")
  untCreatedBy  String?  @map("unt_created_by")
  untCreatedAt  DateTime @default(now()) @map("unt_created_at")
  untUpdatedBy  String?  @map("unt_updated_by")
  untUpdatedAt  DateTime? @map("unt_updated_at")
  project       Project  @relation(fields: [untPrjCode], references: [prjCode])
  @@id([untPrjCode, untCode])
  @@map("t_unit")
}

model Reservation {
  resId         Int      @id @default(autoincrement()) @map("res_id")
  resPrjCode    String   @map("res_prj_code")
  resUnitCode   String   @map("res_unit_code")
  resPerCode    String   @map("res_per_code")
  resCheckin    DateTime @map("res_checkin")
  resCheckout   DateTime @map("res_checkout")
  resGuestCount Int      @map("res_guest_count")
  resTotalPrice Float    @map("res_total_price")
  resStatus     String   @map("res_status")
  resCreatedBy  String?  @map("res_created_by")
  resCreatedAt  DateTime @default(now()) @map("res_created_at")
  resUpdatedBy  String?  @map("res_updated_by")
  resUpdatedAt  DateTime? @map("res_updated_at")
  person        Person   @relation(fields: [resPerCode], references: [perCode])
  project       Project  @relation(fields: [resPrjCode], references: [prjCode])
  @@map("t_reservation")
}

model Shareholding {
  shrId         Int      @id @default(autoincrement()) @map("shr_id")
  shrPerCode    String   @map("shr_per_code")
  shrPrjCode    String   @map("shr_prj_code")
  shrShares     Int      @map("shr_shares")
  shrUnitPrice  Float?   @map("shr_unit_price")
  shrTotalValue Float?   @map("shr_total_value")
  shrFromDate   DateTime @map("shr_from_date")
  shrToDate     DateTime? @map("shr_to_date")
  shrIsActive   Boolean  @default(true) @map("shr_is_active")
  shrNotes      String?  @map("shr_notes")
  shrCreatedBy  String?  @map("shr_created_by")
  shrCreatedAt  DateTime @default(now()) @map("shr_created_at")
  shrUpdatedBy  String?  @map("shr_updated_by")
  shrUpdatedAt  DateTime? @map("shr_updated_at")
  person        Person   @relation(fields: [shrPerCode], references: [perCode])
  project       Project  @relation(fields: [shrPrjCode], references: [prjCode])
  @@unique([shrPerCode, shrPrjCode, shrFromDate])
  @@map("t_shareholding")
}

model ShareTransfer {
  stfId         Int      @id @default(autoincrement()) @map("stf_id")
  stfPrjCode    String   @map("stf_prj_code")
  stfFromPerson String   @map("stf_from_person")
  stfToPerson   String   @map("stf_to_person")
  stfShares     Int      @map("stf_shares")
  stfUnitPrice  Float?   @map("stf_unit_price")
  stfTotalValue Float?   @map("stf_total_value")
  stfTransferDate DateTime @map("stf_transfer_date")
  stfIsFinalized Boolean @default(false) @map("stf_is_finalized")
  stfDesc       String?  @map("stf_desc")
  stfCreatedBy  String?  @map("stf_created_by")
  stfCreatedAt  DateTime @default(now()) @map("stf_created_at")
  stfUpdatedBy  String?  @map("stf_updated_by")
  stfUpdatedAt  DateTime? @map("stf_updated_at")
  project       Project  @relation(fields: [stfPrjCode], references: [prjCode])
  fromPerson    Person   @relation("FromPerson", fields: [stfFromPerson], references: [perCode])
  toPerson      Person   @relation("ToPerson", fields: [stfToPerson], references: [perCode])
  @@map("t_share_transfer")
}

model ShareProfit {
  sptId         Int      @id @default(autoincrement()) @map("spt_id")
  sptPrjCode    String   @map("spt_prj_code")
  sptPerCode    String   @map("spt_per_code")
  sptYear       Int      @map("spt_year")
  sptPeriod     String?  @map("spt_period")
  sptShares     Int      @map("spt_shares")
  sptUnitProfit Float?   @map("spt_unit_profit")
  sptTotalProfit Float?  @map("spt_total_profit")
  sptIsPaid     Boolean  @default(false) @map("spt_is_paid")
  sptPaidAt     DateTime? @map("spt_paid_at")
  sptJrnCode    String?  @map("spt_jrn_code")
  sptCreatedBy  String?  @map("spt_created_by")
  sptCreatedAt  DateTime @default(now()) @map("spt_created_at")
  sptUpdatedBy  String?  @map("spt_updated_by")
  sptUpdatedAt  DateTime? @map("spt_updated_at")
  person        Person   @relation(fields: [sptPerCode], references: [perCode])
  project       Project  @relation(fields: [sptPrjCode], references: [prjCode])
  @@map("t_share_profit")
}

model Journal {
  jrnCode       String   @id @map("jrn_code")
  jrnDate       DateTime @map("jrn_date")
  jrnDesc       String?  @map("jrn_desc")
  jrnType       String   @default("manual") @map("jrn_type")
  jrnModule     String?  @map("jrn_module")
  jrnRefCode    String?  @map("jrn_ref_code")
  jrnIsPosted   Boolean  @default(false) @map("jrn_is_posted")
  jrnCreatedBy  String?  @map("jrn_created_by")
  jrnCreatedAt  DateTime @default(now()) @map("jrn_created_at")
  jrnUpdatedBy  String?  @map("jrn_updated_by")
  jrnUpdatedAt  DateTime? @map("jrn_updated_at")
  journalDetails JournalDetail[]
  @@map("t_journal")
}

model JournalDetail {
  jrdJrnCode    String   @map("jrd_jrn_code")
  jrdLineNo     Int      @map("jrd_line_no")
  jrdAccCode    String   @map("jrd_acc_code")
  jrdDebit      Float    @default(0) @map("jrd_debit")
  jrdCredit     Float    @default(0) @map("jrd_credit")
  jrdDesc       String?  @map("jrd_desc")
  journal       Journal  @relation(fields: [jrdJrnCode], references: [jrnCode])
  account       Account  @relation("AccountJournalDetails", fields: [jrdAccCode], references: [accCode])
  @@id([jrdJrnCode, jrdLineNo])
  @@map("t_journal_detail")
}

model ConfigItemDef {
  cfgItemKey    String   @id @map("cfg_item_key")
  cfgTitle      String?  @map("cfg_title")
  cfgTargetType String   @map("cfg_target_type")
  cfgAccountType String  @map("cfg_account_type")
  cfgIsRequired Boolean  @default(true) @map("cfg_is_required")
  cfgNotes      String?  @map("cfg_notes")
  @@map("t_config_item_def")
}

model ConfigValue {
  cfgItemKey    String   @map("cfg_item_key")
  cfgContextId  String   @map("cfg_context_id")
  cfgAccCode    String   @map("cfg_acc_code")
  cfgIsActive   Boolean  @default(true) @map("cfg_is_active")
  cfgCreatedBy  String?  @map("cfg_created_by")
  cfgCreatedAt  DateTime @default(now()) @map("cfg_created_at")
  account       Account  @relation("AccountConfigValues", fields: [cfgAccCode], references: [accCode])
  @@id([cfgItemKey, cfgContextId])
  @@map("t_config_value")
}

model UnitTariff {
  utfPrjCode    String   @map("utf_prj_code")
  utfUnitCode   String   @map("utf_unit_code")
  utfFromDate   DateTime @map("utf_from_date")
  utfToDate     DateTime @map("utf_to_date")
  utfRowNo      Int      @map("utf_row_no")
  utfConditionExpr String @map("utf_condition_expr")
  utfBasePrice  Float    @map("utf_base_price")
  utfMaxBaseGuests Int   @map("utf_max_base_guests")
  utfMaxBaseNights Int   @default(2) @map("utf_max_base_nights")
  utfOnExpireAction String @default("none") @map("utf_on_expire_action")
  utfExpireAmountPerNight Float? @map("utf_expire_amount_per_night")
  utfCreatedBy   String?  @map("utf_created_by")
  utfCreatedAt   DateTime @default(now()) @map("utf_created_at")
  utfUpdatedBy   String?  @map("utf_updated_by")
  utfUpdatedAt   DateTime? @map("utf_updated_at")
  @@id([utfPrjCode, utfUnitCode, utfFromDate, utfRowNo])
  @@map("t_unit_tariff")
}

model UnitTariffExtra {
  utePrjCode    String   @map("ute_prj_code")
  uteUnitCode   String   @map("ute_unit_code")
  uteFromDate   DateTime @map("ute_from_date")
  uteRowNo      Int      @map("ute_row_no")
  uteAgeGroup   String   @map("ute_age_group")
  uteIsPeak     Boolean  @map("ute_is_peak")
  utePricePerNight Float @map("ute_price_per_night")
  @@id([utePrjCode, uteUnitCode, uteFromDate, uteRowNo, uteAgeGroup, uteIsPeak])
  @@map("t_unit_tariff_extra")
}

model AgeGroup {
  agpCode       String   @id @map("agp_code")
  agpTitle      String?  @map("agp_title")
  agpMinAge     Int      @map("agp_min_age")
  agpMaxAge     Int      @map("agp_max_age")
  @@map("t_age_group")
}

model PeakPeriod {
  pkpLabel      String   @id @map("pkp_label")
  pkpTitle      String?  @map("pkp_title")
  pkpFromDate   DateTime @map("pkp_from_date")
  pkpToDate     DateTime @map("pkp_to_date")
  pkpNotes      String?  @map("pkp_notes")
  @@map("t_peak_period")
}

model ReservationUsage {
  usuPrjCode    String   @map("usu_prj_code")
  usuUnitCode   String   @map("usu_unit_code")
  usuFromDate   DateTime @map("usu_from_date")
  usuRowNo      Int      @map("usu_row_no")
  usuResId      Int      @map("usu_res_id")
  usuConditionExpr String? @map("usu_condition_expr")
  usuGuestCount Int      @map("usu_guest_count")
  usuNightsUsed Int      @map("usu_nights_used")
  usuExtraGuests Int     @map("usu_extra_guests")
  usuTotalExtraFee Float @map("usu_total_extra_fee")
  usuUsageStatus String  @default("used") @map("usu_usage_status")
  usuConvertedAmount Float? @map("usu_converted_amount")
  usuEvaluatedAt DateTime @default(now()) @map("usu_evaluated_at")
  @@id([usuPrjCode, usuUnitCode, usuFromDate, usuRowNo, usuResId])
  @@map("t_reservation_usage")
}

model UserLog {
  ulgId         Int      @id @default(autoincrement()) @map("ulg_id")
  ulgPerCode    String   @map("ulg_per_code")
  ulgAction     String   @map("ulg_action")
  ulgTableName  String   @map("ulg_table_name")
  ulgRecordKey  String   @map("ulg_record_key")
  ulgDesc       String?  @map("ulg_desc")
  ulgIpAddress  String?  @map("ulg_ip_address")
  ulgTimestamp  DateTime @default(now()) @map("ulg_timestamp")
  person        Person   @relation(fields: [ulgPerCode], references: [perCode])
  @@map("t_user_log")
}

model ThemeSettings {
  thsId           Int      @id @default(autoincrement()) @map("ths_id")
  thsCategory     String   @map("ths_category")
  thsKey          String   @map("ths_key")
  thsValue        Json?    @map("ths_value")
  thsLanguageCode String   @default("fa") @map("ths_language_code")
  thsIsActive     Boolean  @default(true) @map("ths_is_active")
  thsCreatedBy    String?  @map("ths_created_by")
  thsCreatedAt    DateTime @default(now()) @map("ths_created_at")
  thsUpdatedBy    String?  @map("ths_updated_by")
  thsUpdatedAt    DateTime? @map("ths_updated_at")
  @@unique([thsCategory, thsKey, thsLanguageCode], name: "unique_setting")
  @@map("t_theme_settings")
}

model ThemeLanguages {
  thlCode            String   @id @map("thl_code")
  thlName            String   @map("thl_name")
  thlNativeName      String?  @map("thl_native_name")
  thlDirection       String   @default("ltr") @map("thl_direction")
  thlCalendar        String   @default("gregorian") @map("thl_calendar")
  thlFontPrimary     String   @default("Arial") @map("thl_font_primary")
  thlFontFallback    String   @default("Tahoma, Arial, sans-serif") @map("thl_font_fallback")
  thlTranslationFile String?  @map("thl_translation_file")
  thlDateFormat      String   @default("MM/DD/YYYY") @map("thl_date_format")

  thlCurrency        String   @default("USD") @map("thl_currency")
  thlCurrencySymbol  String   @default("$") @map("thl_currency_symbol")
  thlIsActive        Boolean  @default(true) @map("thl_is_active")
  thlIsDefault       Boolean  @default(false) @map("thl_is_default")
  thlCreatedBy       String?  @map("thl_created_by")
  thlCreatedAt       DateTime @default(now()) @map("thl_created_at")
  thlUpdatedBy       String?  @map("thl_updated_by")
  thlUpdatedAt       DateTime? @map("thl_updated_at")
  @@map("t_theme_languages")
}

model ThemeLinks {
  thlId         Int      @id @default(autoincrement()) @map("thl_id")
  thlType       String   @map("thl_type")
  thlTitle      String   @map("thl_title")
  thlIcon       String?  @map("thl_icon")
  thlImagePath  String?  @map("thl_image_path")
  thlUrl        String   @map("thl_url")
  thlSortOrder  Int      @default(0) @map("thl_sort_order")
  thlIsActive   Boolean  @default(true) @map("thl_is_active")
  thlCreatedBy  String?  @map("thl_created_by")
  thlCreatedAt  DateTime @default(now()) @map("thl_created_at")
  thlUpdatedBy  String?  @map("thl_updated_by")
  thlUpdatedAt  DateTime? @map("thl_updated_at")
  @@map("t_theme_links")
}

model ThemeTemplates {
  thtId           String   @id @map("tht_id")
  thtName         String   @map("tht_name")
  thtDescription  String?  @map("tht_description")
  thtPreviewImage String?  @map("tht_preview_image")
  thtSettings     Json     @map("tht_settings")
  thtIsDefault    Boolean  @default(false) @map("tht_is_default")
  thtIsSystem     Boolean  @default(false) @map("tht_is_system")
  thtIsActive     Boolean  @default(true) @map("tht_is_active")
  thtCreatedBy    String?  @map("tht_created_by")
  thtCreatedAt    DateTime @default(now()) @map("tht_created_at")
  thtUpdatedBy    String?  @map("tht_updated_by")
  thtUpdatedAt    DateTime? @map("tht_updated_at")
  @@map("t_theme_templates")
} 